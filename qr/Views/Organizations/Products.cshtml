@model Guid
@{
    ViewBag.Title = "Index";
}

<div class="row">
<div class="col-xl">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Управление товарами</h5>
            <p class="card-text">На этой странице вы можете редактировать товары и группы товаров</p>
        </div>
    </div>
</div>
</div>

<div class="row" style="margin-top: 20px;">
    <div class="col-xl">
        <div class="card">
            <div class="card-header">
                Группы товаров
            </div>
            <div class="card-body">
                @(Html.DevExtreme().DataGrid<Core.ProductGroups>()
                                            .DataSource(d => d.Mvc().Controller("ProductGroups")
                                            .Key(new string[] { "Id" })
                                            .LoadAction("Get")
                                            .UpdateAction("Update")
                                            .InsertAction("Insert")
                                            .DeleteAction("Delete")
                                            .LoadParams(new { organizationId = Model.ToString() })
                                            ).Columns(c =>
                                            {
                                                c.AddFor(o => o.Title).Caption("Название");
                                                c.AddFor(o => o.Description).Caption("Описание");
                                                c.AddFor(o => o.OrganizationId).Visible(false);
                                                c.AddFor(o => o.Photo).AllowSorting(false).AllowGrouping(false).Caption("Фотография")
                                                .CellTemplate(@<text>
                                                    <div>
                                                        <img src="<%= value %>" alt="" style="height: 100px; display: block;" />
                                                    </div>
                                                </text>)
                                                .EditCellTemplate(
                                                @<text>
                                                    @(Html.DevExtreme().FileUploader()
                                                        .ID("file-uploader")
                                                        .ElementAttr(new JS("{'data-id': data.id }"))
                                                        .Name("myFile")
                                                        .Multiple(false)
                                                        .Accept("*")
                                                        .UploadMode(FileUploadMode.Instantly)
                                                        .UploadUrl(Url.Action("Upload", "FileUploader"))
                                                        .OnValueChanged("fileUploader_valueChanged")
                                                    )
                                                </text>
                   );
                            })
                            .Editing(e => e.AllowAdding(true)
                            .AllowUpdating(true)
                            .AllowDeleting(true)
                            .Mode(GridEditMode.Popup)
                            .Popup(p =>
                            {
                                p.Title("Edit");
                                p.ShowTitle(true);
                                p.Width(700);
                                p.Height(525);
                                p.Position(pos => pos
                                    .My(HorizontalAlignment.Center, VerticalAlignment.Top)
                                    .At(HorizontalAlignment.Center, VerticalAlignment.Top)
                                    .Of(new JS("window"))
                                );
                            })
                            .Form(f =>
                            {
                                f.Items(i =>
                                {
                                    i.AddGroup().ColCount(2).ColSpan(2).Items(gi =>
                                    {
                                        gi.AddSimpleFor(m => m.Title);
                                        gi.AddSimpleFor(m => m.Description);
                                        gi.AddSimpleFor(m => m.Photo);
                                    });
                                });
                            })
                                )
                                .OnRowInserting(@<text> function(e) { e.data.OrganizationId = "@Model.ToString()"; } </text>)
                        .MasterDetail(md =>
                        {
                            md.Enabled(true);
                            md.Template(
                            @<text>
                                @(Html.DevExtreme().DataGrid<Core.Products>()
                                                    .DataSource(d => d.Mvc().Controller("Products")
                                                    .Key(new string[] { "id", "GroupId" })
                                                    .LoadAction("GetForGroup")
                                                    .UpdateAction("Update")
                                                    .InsertAction("Insert")
                                                    .DeleteAction("Delete")
                                                    .LoadParams(new { GroupId = new JS("data.Id") })
                                                    ).Columns(c =>
                                                    {
                                                        c.AddFor(o => o.Title).Caption("Название");
                                                        c.AddFor(o => o.Description).Caption("Описание");
                                                        c.AddFor(o => o.Price).Caption("Цена");
                                                        c.AddFor(o => o.OrganizationId).Visible(false);
                                                    })
                                                    .Editing(e => e.AllowAdding(true).AllowUpdating(true).AllowDeleting(true))
                                                    .OnInitNewRow(string.Format("function(e) {{ onInitNewRow(e, {0}); }}", new JS("data.Id")))
                                )
                            </text>
                    );
                    })

                )
            </div>
        </div>
    </div>
    
</div>
<div class="row" style="margin-top: 20px;">
    <div class="col-xl">
        <div class="card">
            <div class="card-header">
                Товары
            </div>
            <div class="card-body">
                @(Html.DevExtreme().DataGrid<Core.Products>()
                                    .DataSource(d => d.Mvc().Controller("Products")
                                    .Key(new string[] { "id", "OrganizationId" })
                                    .LoadAction("Get")
                                    .UpdateAction("Update")
                                    .InsertAction("Insert")
                                    .DeleteAction("Delete")
                                    .LoadParams(new { organizationId = Model.ToString() })
                                    )
                                    .Editing(e =>
                                            {
                                                e.Mode(GridEditMode.Popup);
                                                e.AllowAdding(true).AllowUpdating(true).AllowDeleting(true);
                                                e.Popup(p =>
                                                {
                                                    p.Title("Edit");
                                                    p.ShowTitle(true);
                                                    p.Width(700);
                                                    p.Height(525);
                                                    p.Position(pos => pos
                                                        .My(HorizontalAlignment.Center, VerticalAlignment.Top)
                                                        .At(HorizontalAlignment.Center, VerticalAlignment.Top)
                                                        .Of(new JS("window"))
                                                    );
                                                });
                                                e.Form(f =>
                                                {
                                                    f.Items(i =>
                                                    {
                                                        i.AddGroup().ColCount(2).ColSpan(2).Items(gi =>
                                                        {
                                                            gi.AddSimpleFor(m => m.Title);
                                                            gi.AddSimpleFor(m => m.Description);
                                                            gi.AddSimpleFor(m => m.Price);
                                                            gi.AddSimpleFor(m => m.GroupId);
                                                            gi.AddSimpleFor(m => m.Photo);
                                                        });
                                                    });
                                                });
                                            })
                                    .Columns(c =>
                                    {
                                        c.AddFor(o => o.Photo).AllowSorting(false).AllowGrouping(false).Caption("Фотография")
                                        .CellTemplate(@<text>
                                            <div>
                                                <img src="<%= value %>" alt="" style="height: 100px; display: block;" />
                                            </div>
                                        </text>)
                                .EditCellTemplate(
                                @<text>
                                    @(Html.DevExtreme().FileUploader()
                                                                .ID("file-uploader")
                                                                .ElementAttr(new JS("{'data-id': data.id }"))
                                                                .Name("myFile")
                                                                .Multiple(false)
                                                                .Accept("*")
                                                                .UploadMode(FileUploadMode.Instantly)
                                                                .UploadUrl(Url.Action("Upload", "FileUploader"))
                                                                .OnValueChanged("fileUploader_valueChanged")
                                    )
                                </text>
                            );

                                c.AddFor(o => o.Title).Caption("Название");
                                c.AddFor(o => o.Description).Caption("Описание");
                                c.AddFor(o => o.Price).Caption("Цена");
                                c.AddFor(o => o.GroupId).Lookup(l =>
                                l.DataSource(d => d.Mvc().Controller("ProductGroups")
                                .Key("Id")
                                .LoadAction("Get")
                                .LoadParams(new { organizationId = Model.ToString() })
                                ).DisplayExpr("Title").ValueExpr("Id")).CustomizeText(
                    @<text> function(e) { if(!e.value){
                        return "Нет группы"
                        } else {
                        return e.value
                        }
                        }
                    </text>
            ).Caption("Группа");
                                c.AddFor(o => o.QRCode).AllowSorting(false).AllowGrouping(false).Caption("QR-Код")
                                    .CellTemplate(@<text>
                                <div>
                                    <img src="<%= value %>" alt="" style="height: 100px; display: block;" />
                                </div>
                            </text>);
                                    })
                                            
                                            .ShowBorders(true)
                                            .OnRowInserting(@<text> function(e) { e.data.OrganizationId = "@Model.ToString()"; } </text>)
                )
            </div>
        </div>
    </div>
</div>

<script>
    function onInitNewRow(e, parentID) {
    e.data.GroupId = parentID;
    }

    function fileUploader_valueChanged(e) {
        var key = e.element.attr('id');
        e.component.option('uploadUrl', '/FileUploader/Upload?key=' + key);
    }
</script>



